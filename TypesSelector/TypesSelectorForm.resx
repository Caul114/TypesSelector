<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfevcPH3v4Nh9691MfevhWH3r4VR97
        +HQeefQjAAAAAAAAAAAAAAAAH3r3FR969zwfevdhH3r3Zh9692YfevdnH3r3Vx559zEeefUTHnn1ER96
        9gMfe/kzHnn0JgAAAAAAAAAAAAAAAB9694QeePVHHnj1Rx9690YfevdGH3r3Rh9690YfevdGH3r3Rh96
        +F0fevc3H3v5Mx559CYAAAAAAAAAAAAAAAAfevddAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAfevggH3r3OB97+TMeefQmAAAAAAAAAAAAAAAAH3r3XQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAH3r4IB969zgfe/kzHnn0JgAAAAAAAAAAAAAAAB96910AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB96+CAfevc4H3v5Mx559CYAAAAAAAAAAAAAAAAfevddAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAfevggH3r3OB97+TMeefQmAAAAAAAAAAAAAAAAH3r3XQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAH3r4IB969zgfe/kzHnn0JgAAAAAAAAAAAAAAAB96910AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB96+CAfevc4H3v5Mx559CYAAAAAAAAAAAAAAAAfeveLH3v4Ox96
        9xQfePQBAAAAAAAAAAAAAAAAAAAAAAAAAAAfevg1H3r3Mh97+TMeefQmAAAAAAAAAAAAAAAAH3r3Kx96
        +HYfevhFH3r3VR96+FYfevhWH3r3VR97+EMfevdOH3r4UQAAAAAfe/kzHnn0JgAAAAAAAAAAAAAAAAAA
        AAAfevcOH3r4ZR969xUAAAAAAAAAAB959QQfevdzH3r2Uh96+FQfevhWH3r3bB559B0AAAAAAAAAAAAA
        AAAAAAAAAAAAABx59QEfevhUH3r4Mh96+BQfevdtH3r4EgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB96+DcfevhcHnr0AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP8BAADAAQAAwAEAAN/hAADf4QAA3+EAAN/hAADf4QAA3+EAAMPhAADACQAA4wEAAPA/
        AAD8fwAA//8AAA==
</value>
  </data>
</root>